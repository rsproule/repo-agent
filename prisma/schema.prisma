// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GithubInstallation {
  echoUserId     String   @map("echo_user_id")
  installationId BigInt   @map("installation_id")
  accountLogin   String?  @map("account_login")
  accountId      BigInt?  @map("account_id")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([echoUserId, installationId])
  @@index([echoUserId])
  @@map("github_installations")
}

model PullRequestRecord {
  owner             String    @map("owner")
  repo              String    @map("repo")
  prNumber          Int       @map("pr_number")
  prId              BigInt    @map("pr_id")
  title             String
  author            String
  state             String
  htmlUrl           String    @map("html_url")
  body              String?
  prCreatedAt       DateTime  @map("pr_created_at")
  prUpdatedAt       DateTime  @map("pr_updated_at")
  mergedAt          DateTime? @map("merged_at")
  filesChangedCount Int?      @map("files_changed_count")
  lastAnalyzedAt    DateTime? @map("last_analyzed_at")
  echoUserId        String    @map("echo_user_id")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  analysis PRAnalysisRecord?
  buckets  PrBucket[]
  scores   PrScore[]

  @@id([owner, repo, prNumber])
  @@index([owner, repo])
  @@index([echoUserId])
  @@index([state])
  @@map("pull_requests")
}

model PRAnalysisRecord {
  owner           String   @map("owner")
  repo            String   @map("repo")
  prNumber        Int      @map("pr_number")
  summary         String
  relevance       String
  category        String
  impact          Json
  filesChanged    Json     @map("files_changed")
  recommendations Json
  aiGenerated     Json?    @map("ai_generated")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")

  pullRequest PullRequestRecord @relation(fields: [owner, repo, prNumber], references: [owner, repo, prNumber], onDelete: Cascade)

  @@id([owner, repo, prNumber])
  @@index([relevance])
  @@map("pr_analyses")
}

model PrBucketClassificationRun {
  runId           String    @id @default(cuid()) @map("run_id")
  owner           String
  repo            String
  lowestPrNumber  Int       @map("lowest_pr_number")
  highestPrNumber Int       @map("highest_pr_number")
  prCount         Int       @map("pr_count")
  version         String?
  model           String?
  totalCost       Float?    @map("total_cost")
  completedAt     DateTime? @map("completed_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at")

  buckets PrBucket[]

  @@index([owner, repo])
  @@index([createdAt])
  @@map("pr_bucket_classification_runs")
}

model PrBucket {
  id           String   @id @default(cuid())
  runId        String   @map("run_id")
  owner        String
  repo         String
  prNumber     Int      @map("pr_number")
  prId         BigInt   @map("pr_id")
  bucket       Int // 0-3 representing complexity/impact
  additions    Int?
  deletions    Int?
  changedFiles Int?     @map("changed_files")
  createdAt    DateTime @default(now()) @map("created_at")

  run         PrBucketClassificationRun @relation(fields: [runId], references: [runId], onDelete: Cascade)
  pullRequest PullRequestRecord         @relation(fields: [owner, repo, prNumber], references: [owner, repo, prNumber], onDelete: Cascade)

  @@unique([runId, owner, repo, prNumber])
  @@index([owner, repo])
  @@index([bucket])
  @@index([runId])
  @@map("pr_buckets")
}

model PrScore {
  id             String   @id @default(cuid())
  prId           BigInt   @map("pr_id")
  owner          String
  repo           String
  prNumber       Int      @map("pr_number")
  author         String // GitHub login
  authorGithubId BigInt?  @map("author_github_id")
  bucket         Int // Copied from PrBucket for easier querying
  score          Float // Bucket → Score: 0→-2.0, 1→-1.0, 2→1.0, 3→2.0
  initRunId      String   @map("init_run_id")
  initVersion    String   @default("bts1.0") @map("init_version")
  updaterVersion String?  @map("updater_version")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at")

  pullRequest PullRequestRecord @relation(fields: [owner, repo, prNumber], references: [owner, repo, prNumber], onDelete: Cascade)

  @@unique([owner, repo, prNumber])
  @@index([owner, repo])
  @@index([prId])
  @@index([author])
  @@index([bucket])
  @@index([initRunId])
  @@map("pr_scores")
}
